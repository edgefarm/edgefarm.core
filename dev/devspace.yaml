version: v1beta11

vars:
  # kubeedge
  - name: HOST_IP
    question: What is the IP address of your host? (Prefer tailscale IP if available; run `tailscale ip -4`)?
    default: "127.0.0.1"
  - name: HOST_IP_NIP_IO
    command: echo $(echo ${HOST_IP} | xargs).nip.io
  - name: NUMBER_OF_VIRTUAL_DEVICES
    value: 2
  - name: KUBEEDGE_CA
    value: kubeedge
  # k3d
  - name: K3D_CLUSTER_NAME
    value: edgefarm-core
  - name: K3D_CONFIG
    command: echo $(pwd)/k3d-config.yaml
  - name: K3D_EXTRA_ARGS
    value: --volume $HOME/.devspace/certs/:/etc/self-ssl/@server:*

dependencies:
  - name: k3d
    source:
      git: https://github.com/edgefarm/devspace.base
      subPath: /environments/k3d
      branch: v1.0.1
    vars:
      - name: K3D_CLUSTER_NAME
        value: ${K3D_CLUSTER_NAME}
      - name: K3D_CONFIG
        value: ${K3D_CONFIG}
      - name: K3D_EXTRA_ARGS
        value: ${K3D_EXTRA_ARGS}

  - name: olm
    source:
      git: https://github.com/edgefarm/devspace.base
      subPath: /environments/olm
      branch: v1.0.1

  - name: ingress
    source:
      git: https://github.com/edgefarm/devspace.base
      subPath: /environments/ingress
      branch: v1.0.1

  - name: edgefarm-core
    source:
      path: ../

commands:
  - name: init
    command: |-
      devspace run update
      devspace run k3d.init
      devspace run ingress.init
      devspace run olm.install
      devspace run ingress.install
      devspace run edgefarm-core.init

  - name: purge
    command: |-
      devspace run k3d.purge

  - name: activate
    command: |-
      devspace run k3d.activate

  - name: update
    command: |-
      devspace update dependencies

  - name: instantiate-nodes
    command: |-
      #!/bin/bash
      set -e
      devspace run edgefarm-core.mkcert.create-client-cert ${KUBEEDGE_CA} \
        -cert-file $(pwd)/hack/kubeedge-node/certs/node.pem \
        -key-file $(pwd)/hack/kubeedge-node/certs/node.key *.nip.io *.edgefarm.local
      hack/build-kubeedge-node.sh
      for i in $(seq ${NUMBER_OF_VIRTUAL_DEVICES}); do
        hack/instantiate-kubeedge-node.sh ${HOST_IP_NIP_IO} node$i
      done

  - name: purge-nodes
    command: |-
      #!/bin/bash
      for i in $(seq ${NUMBER_OF_VIRTUAL_DEVICES}); do
        docker kill node$i
        kubectl delete nodes node$i
      done
